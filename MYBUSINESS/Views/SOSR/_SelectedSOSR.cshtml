@model IEnumerable<MYBUSINESS.Models.SO>
@using System.Text

@{
    int TotalSOQty = 0;
    decimal TotalSOAmout = 0;
    int TotalSRQty = 0;
    decimal TotalSRAmout = 0;
    decimal TotalProfit = 0;
    decimal BillPaid = 0;
    decimal Discount = 0;
    decimal Balance = 0;
    decimal PrevBalance = 0;
    string whtieSpace = ((char)160).ToString() + ((char)160).ToString() + ((char)160).ToString() + ((char)160).ToString();
    MYBUSINESS.Models.Employee currentUser = (MYBUSINESS.Models.Employee)HttpContext.Current.Session["CurrentUser"];
    Dictionary<decimal, decimal> LstMaxSerialNo = ViewBag.LstMaxSerialNo as Dictionary<decimal, decimal>;
}
@*@functions {
    public string EncodeBase64(string id)
    {
        var bytes = System.Text.Encoding.UTF8.GetBytes(id);
        return Convert.ToBase64String(bytes);
    }
}*@
<div id="NewData">
    <section class="content">
        <div class="row">
            <div class="col-xs-12">
                <div class="box">
                    <div class="box-body">
                        <table class="table table-hover cell-border" id="SOSRIndex">
                            <thead>
                                <tr>
                                    <th style="width:13%;">@Html.DisplayNameFor(model => model.Date)</th>
                                    <th style="display:none;">Order No.</th>
                                    <th>Bill No.</th>
                                    <th>Store Name.</th>
                                    <th style="width:15%;">@Html.DisplayName("Customer")</th>
                                    <th style="display:none;">Type</th>
                                    <th style="display:none;">@Html.DisplayNameFor(model => model.SaleOrderQty)</th>
                                    <th>Total Amount (VAT Excl)</th>
                                    <th>Total Amount With VAT</th>
                                    <th style="display:none;">@Html.DisplayNameFor(model => model.Discount)</th>
                                    <th style="display:none;">@Html.DisplayNameFor(model => model.BillPaid)</th>
                                    @*<th>@Html.DisplayNameFor(model => model.Balance)</th>*@
                                <th style="display:none;">
                                    @if (currentUser != null && currentUser.EmployeeTypeId == 0)
                                    {
                                        @Html.DisplayNameFor(model => model.Profit)
                                    }
                                </th>
                                <th>
                                    @if (currentUser != null && currentUser.EmployeeTypeId == 0)
                                    {
                                        <text>User</text>
                                    }
                                </th>
                                    <th>Payment Method</th>
                                    @*<th>Actions</th>*@
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@Html.DisplayFor(modelItem => item.Date)</td>
                                        <td style="display:none;">@Html.DisplayFor(modelItem => item.SOSerial)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Id)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Store.StoreShortName)</td>
                                        <td class="CustomerNameForSearch">@((item.Customer?.Name ?? "Unknown Customer"))</td>
                                        <td style="display:none;">@(item.SaleReturn ? "Return" : "Sale")</td>
                                        <td style="display:none;">
                                            @Html.DisplayFor(modelItem => item.SaleOrderQty)
                                            @{
                                                if (item.SaleReturn == false)
                                                {
                                                    TotalSOQty += (int)item.SaleOrderQty;
                                                }
                                                else
                                                {
                                                    TotalSOQty -= (int)item.SaleOrderQty;
                                                }
                                            }
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.SaleOrderAmount)
                                            @{
                                                if (item.SaleReturn == false)
                                                {
                                                    TotalSOAmout += (decimal)item.SaleOrderAmount;
                                                }
                                                else
                                                {
                                                    TotalSOAmout -= (decimal)item.SaleOrderAmount;
                                                }
                                            }
                                        </td>
                                        <td>@Html.DisplayFor(modelItem => item.SaleOrderAmountWithVaT)</td>
                                        <td style="display:none;">
                                            @Html.DisplayFor(modelItem => item.Discount)
                                            @{
                                                if (item.SaleReturn == false)
                                                {
                                                    Discount += (decimal)item.Discount;
                                                }
                                                else
                                                {
                                                    Discount -= (decimal)item.Discount;
                                                }
                                            }
                                        </td>
                                        <td style="display:none;">
                                            @Html.DisplayFor(modelItem => item.BillPaid)
                                            @{
                                                if (item.SaleReturn == false)
                                                {
                                                    BillPaid += item.BillPaid;
                                                }
                                                else
                                                {
                                                    BillPaid -= item.BillPaid;
                                                }
                                            }
                                        </td>
                                        @*<td>
            @Html.DisplayFor(modelItem => item.Balance)
            @{
                if (item.SaleReturn == false)
                {
                    Balance += (decimal)item.Balance;
                }
                else
                {
                    Balance -= (decimal)item.Balance;
                }
            }
        </td>*@
                                    <td style="display:none;">
                                        @if (currentUser != null && currentUser.EmployeeTypeId == 0)
                                        {
                                            @Html.DisplayFor(modelItem => item.Profit)
                                            {
                                                if (item.SaleReturn == false)
                                                {
                                                    TotalProfit += (decimal)item.Profit;
                                                }
                                                else
                                                {
                                                    TotalProfit -= (decimal)item.Profit;
                                                }
                                            }
                                        }
                                    </td>
                                    <td>
                                        @if (currentUser != null && currentUser.EmployeeTypeId == 0)
                                        {
                                            @Html.DisplayFor(modelItem => item.Employee.Login)
                                        }
                                    </td>
                                        <td>@Html.DisplayFor(modelItem => item.PaymentMethod)</td>
                                        @*<td>
            @if (!item.IsCancelled.GetValueOrDefault())
            {
                <form action="@Url.Action("CancelBill", "SOSR")" method="post">
                    <input type="hidden" name="soId" value="@item.Id" />
                    <button class="btn btn-danger btn-sm" type="submit">Cancel</button>
                </form>

            }
            else
            {
                <span class="text-muted">Cancelled</span>
            }
        </td>*@
                                    <td>
                                        @if (!item.IsCancelled.GetValueOrDefault())
                                        {
                                            <form action="@Url.Action("CancelBill", "SOSR")" method="post" onsubmit="return confirm('Are you sure you want to cancel this bill?');">
                                                <input type="hidden" name="soId" value="@item.Id" />
                                                <button class="btn btn-danger btn-sm" type="submit">Cancel</button>
                                            </form>
                                        }
                                        else
                                        {
                                            <span class="text-muted">Cancelled</span>
                                        }
                                    </td>




                                        @*<td class="noPrint">
            @{
                if (currentUser.EmployeeTypeId == 0)
                {
                    @Html.ActionLink("Update", "Edit", new { id = item.Id, update = true }, new { @class = "btn btn-info" })
                }
                else
                {
                    @Html.ActionLink(whtieSpace + "View", "Edit", new { id = item.Id, update = false }, new { @class = "btn btn-info" })
                }
            }
            |
            @Html.ActionLink("Print", "PrintSO3", new { id = item.Id }, new { @class = "btn btn-warning" })
        </td>*@
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr style="font-weight:bold">
                                    <td></td>
                                    <td>@Model.Count()</td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>

                                    <td style="display:none;">@TotalSOQty</td>
                                    <td></td>
                                    <td></td>
                                    <td style="display:none;">@Discount</td>
                                    <td style="display:none;">@BillPaid</td>
                                    <td style="display:none;">@Balance</td>
                                    <td style="display:none;">
                                        @if (currentUser != null && currentUser.EmployeeTypeId == 0)
                                        {
                                            @TotalProfit.ToString("0")
                                        }
                                    </td>
                                    <td style="display:none;"></td>
                                    <td style="display:none;"></td>
                                    <td class="noPrint"></td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

<link href="https://cdn.datatables.net/1.11.3/css/jquery.dataTables.min.css" rel="stylesheet" />
<link href="https://cdn.datatables.net/buttons/2.1.0/css/buttons.dataTables.min.css" rel="stylesheet" />

@*<script src="https://code.jquery.com/jquery-3.5.1.js"></script>*@
<script src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.1.0/js/dataTables.buttons.min.js"></script>
@*<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.1.0/js/buttons.html5.min.js"></script>*@
<script src="https://cdn.datatables.net/buttons/2.1.0/js/buttons.print.min.js"></script>


<link href="https://cdn.datatables.net/rowreorder/1.2.8/css/rowReorder.dataTables.min.css" rel="stylesheet" />
<link href="https://cdn.datatables.net/responsive/2.2.9/css/responsive.dataTables.min.css" rel="stylesheet" />

<script src="https://cdn.datatables.net/rowreorder/1.2.8/js/dataTables.rowReorder.min.js"></script>
<script src="https://cdn.datatables.net/responsive/2.2.9/js/dataTables.responsive.min.js"></script>


<script type="text/javascript">
    $(document).ready(function () {
        function confirmCancel(form) {
            if (confirm('Are you sure you want to cancel this bill?')) {
                // Submit form via AJAX
                $.ajax({
                    url: form.action,
                    type: 'POST',
                    data: $(form).serialize(),
                    success: function (response) {
                        // Show success message
                        alert(response);
                        // Reload the page to update the status
                        location.reload();
                    },
                    error: function (xhr, status, error) {
                        alert('Error cancelling bill: ' + error);
                    }
                });
            }
            // Prevent normal form submission
            return false;
        }


        $('#SOSRIndex').DataTable({
            "paging": true,
            "lengthChange": true,
            "pageLength": 100,
            "searching": true,
            "ordering": true,
            "info": true,
            rowReorder: {
                selector: 'td:nth-child(2)'
            },
            "responsive": true,
            "autoWidth": false,
            "order": [[1, "desc"]],
            dom: 'Bfrtip',
            buttons: [
                //{
                //    extend: 'copyHtml5',
                //    exportOptions: {
                //        columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                //    }
                //},
                //{
                //    extend: 'csvHtml5',
                //    exportOptions: {
                //        columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                //    }
                //},
                //{
                //    extend: 'excelHtml5',
                //    exportOptions: {
                //        columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                //    }
                //},
                //{
                //    extend: 'pdfHtml5',
                //    orientation: 'landscape',
                //    pageSize: 'LEGAL',
                //    exportOptions: {
                //        columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                //    }
                //},
                //{
                //    extend: 'print',
                //    exportOptions: {
                //        columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                //    }
                //},
                'colvis'
            ],

            "footerCallback": function (row, data, start, end, display) {
                var api = this.api(), data;

                // Remove the formatting to get integer data for summation
                var intVal = function (i) {
                    return typeof i === 'string' ?
                        i.replace(/[\$,]/g, '') * 1 :
                        typeof i === 'number' ?
                            i : 0;
                };

                // Order No
                pageTotal = api
                    .column(1, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        a += 1;
                        //alert(a);
                        return intVal(a);
                    }, 0);
                $(api.column(1).footer()).html(pageTotal);


                // Order Qty
                pageTotal = api
                    .column(4, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(4).footer()).html(pageTotal);



                // Order Amount
                pageTotal = api
                    .column(5, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(5).footer()).html(pageTotal);

                // Return Qty
                pageTotal = api
                    .column(6, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(6).footer()).html(pageTotal);

                // Return amnt
                pageTotal = api
                    .column(7, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(7).footer()).html(pageTotal);

                // Discount
                pageTotal = api
                    .column(8, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(8).footer()).html(pageTotal);


                // Bill paid
                pageTotal = api
                    .column(10, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(10).footer()).html(pageTotal);

                // Balance
                //pageTotal = api
                //    .column(11, { page: 'current' })
                //    .data()
                //    .reduce(function (a, b) {
                //        return intVal(a) + intVal(b);
                //    }, 0);
                //$(api.column(11).footer()).html(pageTotal);

                // Profit
                pageTotal = api
                    .column(12, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(12).footer()).html(pageTotal);

            }

        });




        //$('#SOSRIndex').DataTable({
        //    fixedHeader: {
        //        footer: true
        //    }
        //});

        $('#SOSRIndex1').DataTable({
            //fixedHeader: {
            //    header: true,
            //    footer: true
            //},
            "scrollX": true,
            "scrollY": "400px",
            "scrollCollapse": true,
            "paging": false,
            "bInfo": false,
            "order": [[1, "desc"]],
            "searching": false,

            "footerCallback": function (row, data, start, end, display) {
                var api = this.api(), data;

                // Remove the formatting to get integer data for summation
                var intVal = function (i) {
                    return typeof i === 'string' ?
                        i.replace(/[\$,]/g, '') * 1 :
                        typeof i === 'number' ?
                            i : 0;
                };

                // Order No
                pageTotal = api
                    .column(1, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        a += 1;
                        //alert(a);
                        return intVal(a);
                    }, 0);
                $(api.column(1).footer()).html(pageTotal);


                // Order Qty
                pageTotal = api
                    .column(4, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(4).footer()).html(pageTotal);



                // Order Amount
                pageTotal = api
                    .column(5, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(5).footer()).html(pageTotal);

                // Return Qty
                pageTotal = api
                    .column(6, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(6).footer()).html(pageTotal);

                // Return amnt
                pageTotal = api
                    .column(7, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(7).footer()).html(pageTotal);

                // Discount
                pageTotal = api
                    .column(8, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(8).footer()).html(pageTotal);


                // Bill paid
                pageTotal = api
                    .column(10, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(10).footer()).html(pageTotal);

                // Balance
                //pageTotal = api
                //    .column(11, { page: 'current' })
                //    .data()
                //    .reduce(function (a, b) {
                //        return intVal(a) + intVal(b);
                //    }, 0);
                //$(api.column(11).footer()).html(pageTotal);

                // Profit
                pageTotal = api
                    .column(12, { page: 'current' })
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                $(api.column(12).footer()).html(pageTotal);

            }

        });

    });


</script>

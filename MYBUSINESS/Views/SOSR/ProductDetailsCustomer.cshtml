@{
    Layout = "~/Views/Shared/_Layout 2.cshtml"; // Path to your layout file
}
@using MYBUSINESS.Models
@model List<CustomerDetailsViewModel>
<style>
    #productDetailsTable {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
        font-size: 20px;
        font-weight: 600;
    }

        #productDetailsTable th {
            text-align: left;
            padding: 12px 15px;
            background-color: #f8f9fa;
            border-bottom: 2px solid #dee2e6;
        }

        #productDetailsTable td {
            padding: 12px 15px;
            border-bottom: 1px solid #dee2e6;
            vertical-align: middle;
        }

        #productDetailsTable tr:last-child td {
            border-bottom: none;
            padding-top: 20px;
        }

        #productDetailsTable .total-row {
            font-weight: bold;
            font-size: 22px;
        }

    .container-fluid {
        padding: 20px;
    }

    .logo-container {
        text-align: center;
        margin-bottom: 20px;
    }

</style>

<div class="container-fluid" style="margin-left:-230px">
    <div class="row">
        <div class="col-md-3"></div>
        <div class="col-md-6">
            <div class="logo-container">
                <img src="~/Content/custom/PV_Logo.png" alt="Company Logo" style="max-width:30%; height:auto; " />
            </div>

            <table id="productDetailsTable">
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Qty</th>
                        <th>Amount</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- This tbody will be dynamically populated -->
                </tbody>
            </table>

            <div id="paymentDetails" style="margin-top: 30px; font-size: 18px; padding: 15px; background-color: #f8f9fa; border-radius: 5px;">
                <!-- Payment details will appear here -->
            </div>
        </div>
        <div class="col-md-3"></div>
    </div>
</div>


<script src="~/Scripts/jquery.signalR-2.4.3.js"></script>
<script src="~/signalr/hubs"></script>
<script>
    $(document).ready(function () {
        debugger;
        const connection = $.connection.phevaHub;
        connection.client.broadcastProductUpdate = function (products) {
            console.log('Received product update in Detail view:', products);
            $('#productDetailsTable tbody').empty();
            let overallTotal = 0;
            products.forEach(function (product) {
                const totalPrice = product.SalePrice * product.Quantity;
                overallTotal += totalPrice;
                $('#productDetailsTable tbody').append(
                    `<tr>
                        <td>${product.ProductName}</td>
                        <td>${product.Quantity}</td>
                       <td>${formatNumberWithDotss(totalPrice)}</td>
                    </tr>`
                );
            });
            // Append the overall total row
            $('#productDetailsTable tbody').append(
                `<tr>
                <td colspan="1"></td>
                <td style="font-weight: bold;">${formatNumberWithDotss(overallTotal)} ₫</td> <!-- Display overall total -->
            </tr>`
            );
        };
        //////Payment Details
        connection.client.broadcastPaymentDetails = function (payments) {
            console.log('Received payment details in Detail view:', payments);
            $('#paymentDetails').empty(); // assuming you have an element to show payment details
            debugger;
            payments.forEach(function (payment) {
                debugger;
                $('#paymentDetails').append(
                    `<div>
                Card VND Amount: ${formatNumberWithDotss(payment.CardVndAmount)}<br />
                Left to Pay VND Balance: ${formatNumberWithDotss(payment.LeftToPayVndBalance)}
            </div>`
                );
            });
        };
        ///Start connection
        $.connection.hub.start({ transport: ['webSockets', 'longPolling', 'serverSentEvents'] })
            .done(function () {
                console.log('Connection started!');
            })
            .fail(function (error) {
                console.error('Could not connect to SignalR hub:', error);
            });

        function formatNumberWithDotss(number) {
            var numberStr = Math.floor(number).toString();
            return numberStr.replace(/\B(?=(\d{3})+(?!\d))/g, ".");
        }
    });

</script>

@*<td>${product.ProductId}</td>
    <td>${product.ProductName}</td>
    <td>${product.SalePrice}</td>
    <td>${product.PurchasePrice}</td>
    <td>${product.Quantity}</td>*@
@*<td colspan="2" style="text-align: right; font-weight: bold;">Overall Total:</td>*@
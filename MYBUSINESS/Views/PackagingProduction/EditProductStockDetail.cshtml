@model MYBUSINESS.Models.FlatBoxStockViewModel
@using Newtonsoft.Json

<link rel="stylesheet" type="text/css" href="//code.jquery.com/ui/1.9.2/themes/base/jquery-ui.css">
<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-ui-timepicker-addon/1.6.1/jquery-ui-timepicker-addon.css">
<script type="text/javascript" src="//code.jquery.com/jquery-1.9.1.js"></script>
<script type="text/javascript" src="//code.jquery.com/ui/1.9.2/jquery-ui.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ui-timepicker-addon/1.6.1/jquery-ui-sliderAccess.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ui-timepicker-addon/1.6.1/jquery-ui-timepicker-addon.js"></script>

<link href="@Url.Content("~/Content/custom/custom.css")" rel="stylesheet" type="text/css" />
@*<script src="~/Content/custom/colorproduction.js"></script>

<script src="~/Content/custom/downloads/jquery.mcautocomplete.js"></script>
<script src="~/Content/custom/downloads/jquery.scannerdetection.js"></script>*@

@{
    bool isReadonly = ViewBag.ReadonlyMode ?? false;
}

<div class="container" id="container">
    <div class="table-wrapper">
        <div class="table-title">
            <div class="row">
                <div class="col-sm-offset-5">
                    <h3>Product: @Model.ProductName</h3>
                    <h2>Edit Production Stock</h2>
                </div>
            </div>
        </div>

        @Html.AntiForgeryToken()

        <table id="production-table" class="table table-bordered">
            <thead>
                <tr class="table-info">
                    <td style="width:10%"><strong>Flat Box in Stock</strong></td>
                    @foreach (var color in Model.ColorComponents)
                    {
                        <td>@color.Quantity</td>
                    }
                </tr>
            </thead>
        </table>

        <table id="selectedProducts" class="table table-bordered">
            <thead>
                <tr class="table-info">
                    <th style="width:2%;">#</th>
                    <th style="width:8%">Colors</th>
                    @foreach (var color in Model.ColorComponents)
                    {
                        <th>@color.ColorName</th>
                    }
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td id="SNo0">1</td>
                    <td><strong>Stock Update</strong></td>
                    @for (int i = 0; i < Model.ColorComponents.Count; i++)
                    {
                        var color = Model.ColorComponents[i];
                        <td>
                            <input type="hidden" class="js-color-id" value="@color.ColorId" />
                            <input type="hidden" class="js-packaging-production-id" value="@Model.PackagingProductionId" />
                            <input type="hidden" class="js-product-id" value="@Model.ProductId" />
                            <input type="number"
                                   class="form-control js-quantity"
                                   value="@color.Quantity"
                                   min="0" />
                        </td>
                    }
                </tr>
            </tbody>
        </table>

        <div class="form-group">
            <button type="button" class="btn btn-success mt-3" id="saveBtn">Update Stock</button>
            @Html.ActionLink("Back to List", "FlatBoxStockSummary", null, new { @class = "btn btn-default mt-3" })
        </div>
    </div>
</div>

@section Scripts {
    <script>
    $(document).ready(function() {
    $('#saveBtn').click(function() {
        var colorComponents = [];
        var packagingProductionId = $('.js-packaging-production-id').first().val();
        var productId = $('.js-product-id').first().val();

        $('.js-quantity').each(function(index) {
            var $row = $(this).closest('td');
            colorComponents.push({
                ColorId: parseInt($row.find('.js-color-id').val()) || 0,
                PackagingProductionId: parseInt(packagingProductionId) || 0,
                ProductId: parseInt(productId) || 0,
                Quantity: parseInt($(this).val()) || 0,
                ColorName: $row.find('.js-color-name').val() || "@Model.ColorComponents[0].ColorName"
            });
        });

        console.log("Submitting:", colorComponents);

        $.ajax({
            url: '@Url.Action("EditProductStockDetail", "PackagingProduction")',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({ colorComponents: colorComponents }), // Wrapped in object
            headers: {
                'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
            },
            success: function(response) {
                if (response && response.success) {
                    window.location.href = response.redirectUrl ||
                        '@Url.Action("FlatBoxStockSummary", "PackagingProduction")';
                } else {
                    alert("Error: " + (response?.message || "Unknown error occurred"));
                }
            },
            error: function(xhr) {
                var errorMsg = xhr.responseJSON?.message ||
                              xhr.statusText ||
                              "Server error occurred";
                alert("Error: " + errorMsg);
            }
        });
    });
});
    </script>
}
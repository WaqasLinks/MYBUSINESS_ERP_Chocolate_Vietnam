@model MYBUSINESS.Models.RegisterViewModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutAnonymous.cshtml";
}

<style>
    .register-box {
        width: 360px;
        margin: 7% auto;
    }

    .register-box-body {
        background: #fff;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .register-box-msg {
        margin: 0 0 20px;
        text-align: center;
        font-size: 18px;
        color: #555;
    }

    .form-control {
        height: 44px;
        font-size: 16px;
        border-radius: 3px;
    }

    .btn-register {
        height: 44px;
        padding: 10px 20px;
        font-size: 16px;
        background: #3c8dbc;
        border: none;
        border-radius: 3px;
        width: 180px;
        margin: 20px auto;
        display: block;
    }

        .btn-register:hover {
            background: #367fa9;
        }

    .has-feedback .form-control {
        padding-left: 40px;
    }

    .form-control-feedback {
        left: 0;
        color: #777;
        width: 38px;
        height: 38px;
        line-height: 38px;
    }

    .text-danger {
        font-size: 14px;
    }

    .input-group {
        margin-bottom: 15px;
    }
</style>

<div class="register-page">
    <div class="register-box">
        <div class="register-logo">
            <h2 style="text-align:center;"><b>Register</b></h2>
        </div>

        <div class="register-box-body">
            <p class="register-box-msg">Register a new user</p>

            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary("", new { @class = "text-danger" })

                <div class="form-group has-feedback">
                    @Html.TextBoxFor(m => m.Email, new
                    {
                        @class = "form-control",
                        placeholder = "Email",
                        type = "email"
                    })
                    <span class="glyphicon glyphicon-envelope form-control-feedback"></span>
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>

                <div class="form-group has-feedback">
                    @Html.PasswordFor(m => m.Password, new
                    {
                        @class = "form-control",
                        placeholder = "Password"
                    })
                    <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>

                <div class="form-group has-feedback">
                    @Html.PasswordFor(m => m.ConfirmPassword, new
                    {
                        @class = "form-control",
                        placeholder = "Confirm Password"
                    })
                    <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                </div>

                <div class="form-group has-feedback">
                    @Html.DropDownList("Role", new SelectListItem[]{
                        new SelectListItem() {Text = "Admin", Value="Admin"},
                        new SelectListItem() {Text = "Manager", Value="Manager"},
                        new SelectListItem() {Text = "User", Value="User"}},
                        "Select Role",
                        new { @class = "form-control" })
                    <span class="glyphicon glyphicon-user form-control-feedback"></span>
                </div>

                <button type="submit" class="btn btn-primary btn-register">Register</button>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Focus on email field when page loads
            $('#Email').focus();

            // Disable autocomplete
            $('input').attr('autocomplete', 'off');
        });

        function GetDepartments(_CountryId) {
            var procemessage = "<option value='0'> Please wait...</option>";
            $("#DepartmentId").html(procemessage).show();
            var url = "/Account/GetDepartmentByCountryId/";

            $.ajax({
                url: url,
                data: { CountryId: _CountryId },
                cache: false,
                type: "POST",
                success: function (data) {
                    var markup = "<option value='0'>Select Department</option>";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $("#DepartmentId").html(markup).show();
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });
        }
    </script>
}
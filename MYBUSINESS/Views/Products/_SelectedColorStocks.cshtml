@model IEnumerable<MYBUSINESS.Models.Product>
@{
    /**/

    double TotalSalePrice = 0;
    double TotalPurchasePrice = 0;

    int TotalStock = 0;
    int carton = 0;
    int piece = 0;
    MYBUSINESS.Models.Employee currentUser = (MYBUSINESS.Models.Employee)HttpContext.Current.Session["CurrentUser"];
    <div id="NewData">
        <section class="content">
            <div class="row">
                <div class="col-xs-12">
                    <div class="box">
                        @*<div class="box-header">
            <h3 class="box-title">Hover Data Table</h3>
        </div>*@
                        <!-- /.box-header -->
                        @*<div class="box-header">
                            @using (Html.BeginForm("StockIndex", "Products", FormMethod.Get))
                            {
                                <div class="form-inline">
                                    <div class="form-group">
                                        <label>Select Product Type:</label>
                                        @Html.DropDownList("pType",
                                                 new SelectList(ViewBag.ProductTypes, "Value", "Text", ViewBag.CurrentPType),
                                                 "-- All Product Types --",
                                                 new { @class = "form-control", onchange = "this.form.submit()" })
                                    </div>
                                    <noscript>
                                        <input type="submit" value="Go" class="btn btn-primary" />
                                    </noscript>
                                </div>
                            }
                        </div>*@
                        <div class="box-header">
                            @using (Html.BeginForm("IndexStock", "Products", FormMethod.Get))
                            {
                                <div class="form-inline">
                                    <div class="form-group">
                                        <label>Select Store:</label>
                                        @Html.DropDownList("storeId",
                                                 new SelectList(ViewBag.Stores, "Value", "Text", ViewBag.CurrentStoreId),
                                                 "-- Select Store --",
                                                 new { @class = "form-control", onchange = "this.form.submit()" })
                                    </div>

                                    <div class="form-group" style="margin-left:10px;">
                                        <label>Select Product Type:</label>
                                        @Html.DropDownList("pType",
                                                 new SelectList(ViewBag.ProductTypes, "Value", "Text", ViewBag.CurrentPType),
                                                 "-- All Product Types --",
                                                 new { @class = "form-control", onchange = "this.form.submit()" })
                                    </div>

                                    <noscript>
                                        <input type="submit" value="Go" class="btn btn-primary" />
                                    </noscript>
                                </div>
                            }
                        </div>
                        <div class="box-body">
                            <table class="table table-hover cell-border" id="ProductIndex">
                                <thead>
                                    <tr>
                                        <th>
                                            @Html.DisplayNameFor(model => model.Id)
                                        </th>
                                        @*
                                        <th>
                                            @Html.DisplayNameFor(model => model.BarCode)
                                        </th>*@

                                        @*
                                        <th>Type</th>*@

                                        <th>
                                            @Html.DisplayNameFor(model => model.Name)
                                        </th>

                                        <th>
                                            @Html.DisplayNameFor(Model => Model.Category)
                                        </th>

                                        <th>
                                            @Html.DisplayNameFor(model => model.Unit)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.Stock)
                                        </th>
                                        <th>Colors</th>
                                        <th>Color Quantities</th>
                                        <th style="display:none;">
                                            @Html.DisplayNameFor(model => model.SalePrice)
                                        </th>
                                        <th style="display:none;">
                                            Whole Sale Price
                                        </th>
                                        @*
                                        <th>
                                            @Html.DisplayNameFor(model => model.Stock)
                                        </th>*@




                                        @*
                                        <th>
                                            @if (currentUser.EmployeeTypeId == 0)
                                            {
                                            <text>Total Purchase Price</text>
                                            }
                                        </th>*@

                                        @*
                                        <th>
                                            Total Sale Price
                                        </th>*@


                                        @*
                                        <th>
                                            Remarks
                                        </th>*@
                                        <th class="no-print" style="display:none;"></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                    <tr>
                                        <td class="ProductIdForSearch">
                                            @Html.DisplayFor(modelItem => item.Id)
                                        </td>
                                        @*
        <td class="ProductIdForSearch">
            @Html.DisplayFor(modelItem => item.BarCode)
        </td>*@
                                        @*
        <td>
            @{
            if (!item.IsService)
            {
            @Html.DisplayName("Product")
            }
            else
            {
            @Html.DisplayName("Service")
            }
            }
        </td>*@

                                        <td class="ProductNameForSearch">
                                            @Html.DisplayFor(modelItem => item.Name)
                                        </td>
                                        <td class="ProductNameForSearch">
                                            @Html.DisplayFor(modelItem => item.Category)
                                        </td>
                                        <td class="ProductNameForSearch">
                                            @Html.DisplayFor(modelItem => item.Unit)
                                        </td>
                                        <td class="ProductNameForSearch">
                                            @Html.DisplayFor(modelItem => item.Stock)
                                        </td>

                                        @*<td>
            @if (item.PaperColors != null && item.PaperColors.Any())
            {
            <ul style="list-style-type:none; padding-left:0; margin:0;">
                @foreach (var color in item.PaperColors)
                {
                <li>@color.Color</li>
                }
            </ul>
            }
        </td>
        <td>
            @if (item.PaperColors != null && item.PaperColors.Any())
            {
            <ul style="list-style-type:none; padding-left:0; margin:0;">
                @foreach (var color in item.PaperColors)
                {
                <li>@color.Quantity</li>
                }
            </ul>
            }
        </td>*@
                                        <td>
                                            @if (item.PaperColors != null && item.PaperColors.Any())
                                            {
                                                var groupedColors = item.PaperColors
                                                    .GroupBy(c => c.Color)
                                                    .Select(g => new
                                                    {
                                                        Color = g.Key,
                                                        TotalQuantity = g.Sum(c => c.Quantity)
                                                    });

                                                <ul style="list-style-type:none; padding-left:0; margin:0;">
                                                    @foreach (var color in groupedColors)
                                                    {
                                                        <li>@color.Color</li>
                                                    }
                                                </ul>
                                            }
                                        </td>
                                        <td>
                                            @if (item.PaperColors != null && item.PaperColors.Any())
                                            {
                                                var groupedColors = item.PaperColors
                                                    .GroupBy(c => c.Color)
                                                    .Select(g => new
                                                    {
                                                        Color = g.Key,
                                                        TotalQuantity = g.Sum(c => c.Quantity)
                                                    });

                                                <ul style="list-style-type:none; padding-left:0; margin:0;">
                                                    @foreach (var color in groupedColors)
                                                    {
                                                        <li>@color.TotalQuantity</li>
                                                    }
                                                </ul>
                                            }
                                        </td>
                                        <td style="display:none;">
                                            @Html.DisplayFor(modelItem => item.SalePrice)
                                        </td>
                                        <td style="display:none;">
                                            @Html.DisplayFor(modelItem => item.WholeSalePrice)
                                        </td>

                                        <!--<td>-->
                                        @* Display stock information *@
                                        <!--@{
            if (!item.IsService)
            {
                // Calculate the store product stock for the current store
                var storeProductStock = 0;
                var cartons = 0;
                var pieces = 0;

                foreach (var sp in item.StoreProducts)
                {
                    if (sp.StoreId == 1)
                    {
                        storeProductStock = (int)sp.Stock;
                        break; // Exit loop once the store is found
                    }
                }

                // Calculate carton and piece based on storeProductStock and item.PerPack
                cartons = (int)(storeProductStock / item.PerPack);
                pieces = (int)(storeProductStock % item.PerPack);

                // Display the stock information
                if (pieces == 0)
                {
                    @(cartons)
                }
                else
                {
                    @(cartons + "," + pieces)
                }

                // Update the TotalStock
                TotalStock += cartons;
            }
            else
            {
                @Html.DisplayName("---------")
            }
        }
    </td>-->
                                        @*
        <td>
            @{
            if (item.IsService == false)
            {
            carton = (int)(item.Stock / item.PerPack);
            piece = (int)(item.Stock % item.PerPack);
            if (piece == 0)
            {
            @(carton)
            }
            else
            {
            @(carton + "," + piece)
            }
            TotalStock += (int)(item.Stock / item.PerPack);
            }
            else
            {
            @Html.DisplayName("---------")
            }
            }
        </td>*@


                                        @*
        <td>
            @if (currentUser.EmployeeTypeId == 0)
            {
            if (item.IsService == false)
            {
            @((item.PurchasePrice * item.Stock).Value.ToString("0.00"))
            { TotalPurchasePrice += (double)(item.PurchasePrice * item.Stock); }
            }
            else
            {
            @Html.DisplayName("---------")
            }
            }

        </td>*@

                                        @*
        <td>

            @{
            if (item.IsService == false)
            {
            @((item.SalePrice * item.Stock).Value.ToString("0.00"));
            { TotalSalePrice += (double)(item.SalePrice * item.Stock); }
            }
            else
            {
            @Html.DisplayName("---------")
            }
            }


        </td>*@



                                        @*
        <td class="">
            @Html.DisplayFor(modelItem => item.Remarks)
        </td>*@
                                        <td class="no-print" style="display:none;">
                                            @Html.ActionLink("Update", "Edit", new { id = item.Id }, new { @class = "btn btn-info" })

                                            @*@{
            if (item.IsService == false)
            {
            @Html.ActionLink("Update", "Edit", new { id = item.Id })
            }
            else
            {
            @Html.ActionLink("Update", "EditService", new { id = item.Id })
            }
            }*@



                                            @*<a href="@Url.Action(" ProductWiseSale","SOSR", new { productId=item.Id })" class="btn btn-warning" data-toggle="tooltip" data-placement="top" title="Search this product">Product Wise Sale</a>

            |*@
                                            @*@Html.ActionLink("Details", "Details", new { id=item.Id }) |*@
                                            @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-danger" })

                                            <div class="dropdown">
                                                @*<button class="btn btn-warning dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    more ...
                </button>*@
                                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                                    <a class="dropdown-item" href="@Url.Action(" SearchProduct", "SOSR" , new { productId=item.Id })" data-toggle="tooltip" data-placement="top" title="Search this product in Sales">Search in Sales History</a>
                                                    <a class="dropdown-item" href="@Url.Action(" SearchProduct", "POPR" , new { productId=item.Id })" data-toggle="tooltip" data-placement="top" title="Search this product in Purchasess">Search in Purchases History</a>
                                                </div>
                                            </div>

                                        </td>
                                    </tr>
                                    }
                                </tbody>
                                <tfoot>
                                    <tr style="font-weight:bold">

                                        @*<td>@Model.Count()</td>*@
                                        @*<td></td>

                        <td></td>*@
                                        <td></td>

                                        <td></td>

                                        <td></td>


                                        <td></td>
                                        @*<td>@TotalStock</td>


                        <td>
                            @if (currentUser.EmployeeTypeId == 0)
                            {
                                @TotalPurchasePrice
                            }
                        </td>

                        <td>@TotalSalePrice</td>

                        <td></td>*@
                                        <td></td>
                                        <td style="display:none;"></td>
                                        <td style="display:none;"></td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
}


<link href="https://cdn.datatables.net/1.11.3/css/jquery.dataTables.min.css" rel="stylesheet" />
<link href="https://cdn.datatables.net/buttons/2.1.0/css/buttons.dataTables.min.css" rel="stylesheet" />

@*<script src="https://code.jquery.com/jquery-3.5.1.js"></script>*@
<script src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.1.0/js/dataTables.buttons.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
<script src="https://cdn.datatables.net/buttons/2.1.0/js/buttons.html5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.1.0/js/buttons.print.min.js"></script>


<link href="https://cdn.datatables.net/rowreorder/1.2.8/css/rowReorder.dataTables.min.css" rel="stylesheet" />
<link href="https://cdn.datatables.net/responsive/2.2.9/css/responsive.dataTables.min.css" rel="stylesheet" />

<script src="https://cdn.datatables.net/rowreorder/1.2.8/js/dataTables.rowReorder.min.js"></script>
<script src="https://cdn.datatables.net/responsive/2.2.9/js/dataTables.responsive.min.js"></script>


<script type="text/javascript">
    $(document).ready(function () {
        $('#printMe').click(function () {
            if ($.fn.DataTable.isDataTable('#ProductIndex')) {
                $('#ProductIndex').DataTable().destroy();
            }
            window.print();
        });

        // Initialize DataTable with all configurations (only once)
    

        // Store change handling
        $('#storeId').change(function () {
            $('.box-body').html('<div class="text-center"><i class="fa fa-spinner fa-spin fa-3x"></i></div>');
        });
    });

</script>

@model MYBUSINESS.Models.ProductViewModel

@{
    ViewBag.Title = "Update Product";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" type="text/css" href="//code.jquery.com/ui/1.9.2/themes/base/jquery-ui.css">
<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-ui-timepicker-addon/1.6.1/jquery-ui-timepicker-addon.css">
<script type="text/javascript" src="//code.jquery.com/jquery-1.9.1.js"></script>
<script type="text/javascript" src="//code.jquery.com/ui/1.9.2/jquery-ui.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ui-timepicker-addon/1.6.1/jquery-ui-sliderAccess.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ui-timepicker-addon/1.6.1/jquery-ui-timepicker-addon.js"></script>
@*<link href="@Url.Content("~/Content/custom/custom.css")" rel="stylesheet" type="text/css" />*@
@*<script src="~/Content/custom/products.js"></script>*@
<script src="~/Content/custom/downloads/jquery.mcautocomplete.js"></script>
<script src="~/Content/custom/downloads/jquery.scannerdetection.js"></script>
<script src="~/Content/custom/subItem - Copy.js"></script>
<div class="content-wrapper">
    <section class="content">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="row">
                <!-- left column -->
                <div class="col-md-6">
                    <!-- general form elements -->
                    <div class="box box-primary">
                        <div class="box-header with-border">
                            <h3 class="box-title">Update Product</h3>
                        </div>

                    


                    <form role="form">
                        <div class="box-body">


                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @*@Html.HiddenFor(model => model.Id)*@


                            <div class="form-group">
                                @Html.LabelFor(model => Model.Product.Id, htmlAttributes: new { @class = "control-label" })

                                @Html.EditorFor(model => model.Product.Id, new { htmlAttributes = new { @class = "form-control", @Readonly = "Readonly" } })
                                @Html.ValidationMessageFor(model => model.Product.Id, "", new { @class = "text-danger" })

                            </div>



                            @*@Html.HiddenFor(model => model.IsService, new { Value = "false" })*@
                            @Html.HiddenFor(model => model.Product.ShowIn, new { Value = "P" })

                            <div style="display:none;" class="form-group">
                                <select class="form-control" name="IsService" id="isService">
                                    <option value="false" selected>Product</option>
                                    <option value="true">Service</option>
                                </select>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Product.BarCode, htmlAttributes: new { @class = "control-label" })

                                @Html.EditorFor(model => model.Product.BarCode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Product.BarCode, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group">
                                @*@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })*@
                                <lebel><b>Product Name English</b></lebel>

                                @Html.EditorFor(model => model.Product.Name, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.Product.Name, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group">
                                <lebel><b>Product Name Vietnamese</b></lebel>
                                <input type="text" class="form-control" name="prouctNameInVnd" id="prouctNameInVnd" />
                            </div>

                            <div class="form-group">
                                @*@Html.LabelFor(model => model.Saleable, htmlAttributes: new { @class = "control-label" })*@
                                <label>Supplier </label>
                                <input type="text" autocomplete="off" class="form-control" name="Supplier.Name" id="supplier" value="" placeholder="Supplier" data-toggle="tooltip" data-placement="top" title="Supplier">
                            </div>

                            <div class="form-group">
                                <label><b>Category</b></label>
                                @Html.DropDownListFor(model => model.Product.Category, new SelectList(new[]
        {
                                    new { Value = "Select", Text = "Select" },
                                    new { Value = "Box", Text = "Box" },
                                    new { Value = "Bar", Text = "Bar" },
                                    new { Value = "Bag", Text = "Bag" },
                                    new { Value = "Miscellaneous", Text = "Miscellaneous" }
                                }, "Value", "Text", Model.Product.Category), new { @class = "form-control" })
                            </div>
                            @*<div class="form-group">
                                    <lebel>
                                        <b>Category</b>
                                    </lebel>
                                    <select class="form-control" id="selectCategory" name="Category">
                                        <option>Select</option>
                                        <option>Box</option>
                                        <option>Bar</option>
                                        <option>Bag</option>
                                        <option>Miscellanous</option>
                                    </select>

                                </div>*@
                            <div class="form-group">
                                <lebel>
                                    <b>Unit</b>
                                </lebel>
                                <select class="form-control">
                                    <option>Select</option>
                                    <option>Box</option>
                                    <option>Kg</option>
                                    <option>Liter</option>
                                </select>

                            </div>

                            <div id="pprice" class="form-group">
                                @*@Html.LabelFor(model => model.PurchasePrice, htmlAttributes: new { @class = "control-label" })*@
                                <lebel><b>Purchase Price</b></lebel>
                                @Html.EditorFor(model => model.Product.PurchasePrice, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Product.PurchasePrice, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Product.SalePrice, htmlAttributes: new { @class = "control-label" })

                                @Html.EditorFor(model => model.Product.SalePrice, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Product.SalePrice, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group">
                                <leble><b>Excluded Sale Price (VAT) </b></leble>

                                @Html.EditorFor(model => model.Product.SalePrice, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Product.SalePrice, "", new { @class = "text-danger" })

                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Product.WholeSalePrice, htmlAttributes: new { @class = "control-label" })

                                @Html.EditorFor(model => model.Product.WholeSalePrice, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Product.WholeSalePrice, "", new { @class = "text-danger" })

                            </div>
                            <div id="stk" class="form-group">

                                @Html.LabelFor(model => model.Product.Stock, htmlAttributes: new { @class = "control-label" })
                                @{
                                    MYBUSINESS.Models.Employee currentUser = (MYBUSINESS.Models.Employee)HttpContext.Current.Session["CurrentUser"];
                                    if (currentUser.EmployeeTypeId == 0)
                                    {
                                        @Html.EditorFor(model => model.Product.Stock, new { htmlAttributes = new { @class = "form-control", @id = "stock" } })
                                    }
                                    else
                                    {
                                        @Html.EditorFor(model => model.Product.Stock, new { htmlAttributes = new { @class = "form-control", @id = "stock", @disabled = "disabled" } })
                                    }
                                }

                                @Html.ValidationMessageFor(model => model.Product.Stock, "", new { @class = "text-danger" })

                            </div>
                            <div id="stk" class="form-group">
                                @Html.LabelFor(model => model.Product.Remarks, htmlAttributes: new { @class = "control-label" })

                                @Html.EditorFor(model => model.Product.Remarks, new { htmlAttributes = new { @class = "form-control", @id = "Remarks" } })
                                @Html.ValidationMessageFor(model => model.Product.Remarks, "", new { @class = "text-danger" })

                            </div>
                            <div style="display:none;" id="ppack" class="form-group">
                                @Html.LabelFor(model => model.Product.PerPack, htmlAttributes: new { @class = "control-label" }) (at least 1)

                                @Html.EditorFor(model => model.Product.PerPack, new { htmlAttributes = new { @class = "form-control", @id = "perPack", @Value = 1 } })
                                @Html.ValidationMessageFor(model => model.Product.PerPack, "", new { @class = "text-danger" })

                            </div>

                            <!--<div style="display:none;" class="form-group">
                            @Html.LabelFor(model => model.Product.Saleable, htmlAttributes: new { @class = "control-label" })



                            @Html.EditorFor(model => model.Product.Saleable)-->
                            @*@Html.EditorFor(model => model.Saleable, new[] { new SelectListItem { Text = "Yes", Value = "True", Selected = true }, new SelectListItem { Text = "No", Value = "False" } })*@

                            @*@Html.CheckBoxFor(m => m.Saleable, new { @value = "true" })*@

                            <!--@Html.ValidationMessageFor(model => model.Product.Saleable, "", new { @class = "text-danger" })
                            </div>-->

                            <div class="form-group">
                                <!-- Purchasable Checkbox -->
                                <label>Purchasable</label>
                                &nbsp;
                                @Html.CheckBoxFor(model => model.Product.Purchasable, new { @class = "form-check-input" })
                                @Html.ValidationMessageFor(model => model.Product.Purchasable, "", new { @class = "text-danger" })
                                &nbsp;
                                &nbsp;
                                &nbsp;

                                <!-- Manufacturable Checkbox -->
                                <label>Manufacturable</label>
                                &nbsp;
                                @Html.CheckBoxFor(model => model.Product.Manufacturable, new { @class = "form-check-input" })
                                @Html.ValidationMessageFor(model => model.Product.Manufacturable, "", new { @class = "text-danger" })
                                &nbsp;
                                &nbsp;
                                &nbsp;

                                <!-- Saleable Checkbox -->
                                <label>Saleable</label>
                                &nbsp;
                                @Html.CheckBoxFor(model => model.Product.Saleable, new { @class = "form-check-input" })
                                @Html.ValidationMessageFor(model => model.Product.Saleable, "", new { @class = "text-danger" })
                            </div>

                        </div>
                        <div class="box-footer">
                            <input type="submit" value="Create" id="CreateProduct" class="btn btn-primary" />
                            @Html.ActionLink("Back to List", "Index")
                        </div>

                    </form>

                        </div>
                </div>
                <div class="col-md-6">
                    <!-- general form elements -->
                    <!-- general form elements -->
                    <div class="box box-primary">
                        <div class="box-header with-border">
                            <h3 class="box-title">Product Details</h3>
                        </div>


                        <div class="box-body">



                            <table id="selectedProducts" class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th style="width: 5%;">#</th>
                                        <th style="width: 50%;">Shape</th>
                                        <th style="width: 20%;">Weight</th>
                                        <th style="width: 12%;"></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.ProductDetail != null && Model.ProductDetail.Count > 0)
                                    {
                                        int sNo = 0;
                                        foreach (var item in Model.ProductDetail)
                                        {
                                            <tr>
                                                <td id="Pr@(sNo)">@(sNo + 1)</td>
                                                <td style="display:none;">
                                                    <input type="hidden" name="ProductDetail.Index" value="@sNo" />
                                                </td>
                                                <td style="display:none;">
                                                    <input type="text" value="@item.ProductId" readonly class="form-control classBGcolor"
                                                           name="ProductDetail[@sNo].ProductId" id="idn@(sNo)">
                                                </td>
                                                <td>
                                                    <input type="text" autocomplete="off" value="@(item.Shape)" class="form-control"
                                                           name="ProductDetail[@sNo].Shape" id="shape@(sNo)" placeholder="Type shape"
                                                           data-toggle="tooltip" data-placement="top" title="Type shape">
                                                </td>
                                                <td>
                                                    <input type="text" autocomplete="off" value="@(item.Weight)" class="form-control"
                                                           name="ProductDetail[@sNo].Weight" id="weight@(sNo)" placeholder="Type weight"
                                                           data-toggle="tooltip" data-placement="top" title="Type weight">
                                                </td>
                                                <td>
                                                    <button type="button" id="delete@(sNo)" class="delete btn btn-default add-new">
                                                        <a class="delete" title="Delete" data-toggle="tooltip">
                                                            <i class="material-icons">&#xE872;</i>
                                                        </a>
                                                    </button>
                                                </td>
                                            </tr>
                                            sNo += 1;
                                        }
                                    }
                                </tbody>
                            </table>



                            <div class="table-title">
                                <div class="row">
                                    <div class="col-sm-3">
                                        <button type="button" id="addNewRow" class="btn btn-primary add-new" style="background-color: #2bbdb9;"><i class="fa fa-plus"></i> New Row</button>
                                    </div>
                                </div>
                            </div>

                        </div>




                    </div>
                </div>



            </div>
        }
    </section>
</div>

<script>



    $('#stock').keyup(function () {
        this.value = this.value.replace(/[^0-9]/g, '');
    });

    //$('#packing,#perPack').keyup(function () {

    //    $("#stock").val($("#packing").val() * $("#perPack").val())
    //});


</script>

@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
